DROP TABLE IF EXISTS User ;
DROP TABLE IF EXISTS "Group";
DROP TABLE IF EXISTS Question;
DROP TABLE IF EXISTS Option;
DROP TABLE IF EXISTS Group_Membership;
DROP TABLE IF EXISTS Question_Group_Membership;
DROP TABLE IF EXISTS Question_User_Status;
DROP TABLE IF EXISTS Question_User_Options;

CREATE TABLE User (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, username VARCHAR (3, 20) NOT NULL UNIQUE, email TEXT (7, 40) NOT NULL, password BLOB NOT NULL);

CREATE TABLE "Group" (id INTEGER PRIMARY KEY AUTOINCREMENT, Creator INTEGER REFERENCES User (id) ON DELETE NO ACTION ON UPDATE CASCADE, Name TEXT (2, 40) NOT NULL UNIQUE, Description TEXT (0, 256));

CREATE TABLE Question (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Question TEXT UNIQUE NOT NULL, Asker_ID INTEGER REFERENCES User (id) ON DELETE CASCADE ON UPDATE CASCADE, Start_Time DATETIME NOT NULL, Closed_Time DATETIME, Answer INTEGER REFERENCES Option (id) ON DELETE SET NULL ON UPDATE CASCADE);

CREATE TABLE Option (id INTEGER PRIMARY KEY AUTOINCREMENT, Question_ID INTEGER REFERENCES Question (id) ON DELETE CASCADE ON UPDATE CASCADE, option TEXT);

CREATE TABLE Group_Membership (Group_ID INTEGER REFERENCES "Group" (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, User_ID INTEGER REFERENCES User (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, PRIMARY KEY (Group_ID, User_ID));

CREATE TABLE Question_Group_Membership (Question_ID INTEGER REFERENCES Question (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, Group_ID INTEGER REFERENCES "Group" (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL);

CREATE TABLE Question_User_Status (id INTEGER PRIMARY KEY AUTOINCREMENT, Question_ID INTEGER REFERENCES Question (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, User_ID INTEGER REFERENCES User (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, currency DOUBLE NOT NULL DEFAULT (100));

CREATE TABLE Question_User_Options (Question_User_Status_id INTEGER REFERENCES Question_User_Status (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, option_id INTEGER REFERENCES Option (id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL, shares INTEGER NOT NULL DEFAULT (0), PRIMARY KEY (Question_User_Status_id, option_id));

INSERT INTO User(username, email, password) VALUES("ADMIN", "ADMIN@GMAIL.COM", "ADMIN_PASSWORD");
INSERT INTO "Group"(Creator, Name, Description) VALUES(0, "ALL", "Group containing everyone");
